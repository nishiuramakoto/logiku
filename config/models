------------------ Prolog Program Database Schema -------------------------------

-- 'user' is a reserved name in postgres...
UserAccount
    ident       Text
    privileged  Bool
    password    Text Maybe
    displayName Text Maybe

    umaskOwnerR    Bool
    umaskOwnerW    Bool
    umaskOwnerX    Bool
    umaskGroupR    Bool
    umaskGroupW    Bool
    umaskGroupX    Bool
    umaskEveryoneR Bool
    umaskEveryoneW Bool
    umaskEveryoneX Bool

    UniqueUserAccount ident
    deriving Show Typeable


Directory json
      userId        UserAccountId
      name          Text
      code          Text
      explanation   Text

      ownerR    Bool
      ownerW    Bool
      ownerX    Bool
      everyoneR Bool
      everyoneW Bool
      everyoneX Bool

      UniqueDirectory userId name
      deriving  Show

File
      userId          UserAccountId
      directoryId     DirectoryId
      name            Text
      code            Text
      explanation     Text

      ownerR    Bool
      ownerW    Bool
      ownerX    Bool
      everyoneR Bool
      everyoneW Bool
      everyoneX Bool

      UniqueFile userId directoryId name
      deriving Show


------------------------------ Groups ------------------------------

Group
    name         Text
    owner        UserAccountId
    explanation  Text

    UniqueGroup  name
    deriving Show

GroupMember
    groupId      GroupId
    member       UserAccountId

    UniqueGroupMember groupId member
    deriving Show

DirectoryGroup
  directoryId   DirectoryId
  groupId       GroupId

  groupR Bool
  groupW Bool
  groupX Bool

  UniqueDirectoryGroup  directoryId groupId
  deriving Show

FileGroup
  fileId     FileId
  groupId    GroupId

  groupR Bool
  groupW Bool
  groupX Bool

  UniqueFileGroup fileId groupId
  deriving Show


----------------------------- Tags  ----------------------------
Tag
	name		Text
	UniqueTag	name
	deriving Show

DirectoryTag
	directoryId	DirectoryId
	tagId		TagId
	UniqueDirectoryTag directoryId tagId
	deriving Show

FileTag
	fileId	FileId
	tagId	TagId
	UniqueFileTag fileId tagId
        deriving Show


--------------------------  JSON Entities ----------------------------
FileJson json
      name            Text
      explanation     Text
      code            Text
      deriving Show

---------------------------- For testing  ----------------------------

Email
    email Text
    userId UserAccountId Maybe
    verkey Text Maybe

    UniqueEmail email

Comment json -- Adding "json" causes ToJSON and FromJSON instances to be derived.
    message Text
    userId UserAccountId Maybe
    deriving Eq
    deriving Show

 -- By default this file is used in Model.hs (which is imported by Foundation.hs)

Blog
    ownerId UserAccountId
    blogTitle  Text
    blogBody   Text
    deriving Show
